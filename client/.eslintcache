[{"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/index.js":"1","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/App.js":"2","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reportWebVitals.js":"3","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/AppNavbar.js":"4","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectList.js":"5","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/store.js":"6","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/index.js":"7","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/projectReducer.js":"8","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/types.js":"9","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/projectActions.js":"10","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectModal.js":"11","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/Project.js":"12","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectNavbar.js":"13","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectDescription.js":"14","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectEditModal.js":"15","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectContributorSidebar.js":"16"},{"size":478,"mtime":1607741536159,"results":"17","hashOfConfig":"18"},{"size":1303,"mtime":1607834926697,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607739975084,"results":"20","hashOfConfig":"18"},{"size":794,"mtime":1607833494219,"results":"21","hashOfConfig":"18"},{"size":2049,"mtime":1607935933922,"results":"22","hashOfConfig":"18"},{"size":406,"mtime":1607769426518,"results":"23","hashOfConfig":"18"},{"size":153,"mtime":1607768491831,"results":"24","hashOfConfig":"18"},{"size":1303,"mtime":1607933234559,"results":"25","hashOfConfig":"18"},{"size":328,"mtime":1607919806014,"results":"26","hashOfConfig":"18"},{"size":1491,"mtime":1607934185903,"results":"27","hashOfConfig":"18"},{"size":2264,"mtime":1607834926712,"results":"28","hashOfConfig":"18"},{"size":3185,"mtime":1607935321192,"results":"29","hashOfConfig":"18"},{"size":1448,"mtime":1607834926714,"results":"30","hashOfConfig":"18"},{"size":625,"mtime":1607834926704,"results":"31","hashOfConfig":"18"},{"size":2428,"mtime":1607834926706,"results":"32","hashOfConfig":"18"},{"size":1180,"mtime":1607834926703,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"dk7szp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/index.js",[],["71","72"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/App.js",["73"],"import logo from \"./RavenLogo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ProjectList from \"./components/ProjectList\";\nimport Project from \"./components/Project\";\nimport ProjectModal from \"./components/ProjectModal\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <React.Fragment>\n                  <ProjectModal></ProjectModal>\n                  <ProjectList />\n                </React.Fragment>\n              )}\n            />\n            <Route\n              exact\n              path=\"/projects/:id\"\n              render={(props) => (\n                <React.Fragment>\n                  <Project id={props.match.params.id}></Project>\n                </React.Fragment>\n              )}\n            />\n          </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reportWebVitals.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/AppNavbar.js",["74","75"],"import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n} from \"reactstrap\";\n\nexport class AppNavbar extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">Raven</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar></Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default AppNavbar;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectList.js",["76"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/store.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/index.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/projectReducer.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/types.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/projectActions.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectModal.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/Project.js",["77"],"import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport {\n  getProject,\n  deleteProject,\n  editProjectImage,\n} from \"../actions/projectActions\";\nimport { connect } from \"react-redux\";\nimport ProjectNavbar from \"./ProjectNavbar\";\nimport ProjectEditModal from \"./ProjectEditModal\";\nimport ProjectContributorSidebar from \"./ProjectContributorSidebar\";\n\nexport class Project extends Component {\n  state = {\n    file: null,\n    img: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getProject(this.props.id).then(() => {\n      this.setImgSource();\n    });\n  }\n\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n    window.location.href = \"/\";\n  };\n\n  setImgSource = () => {\n    const { img } = this.props.project;\n\n    if (!img) {\n      return;\n    }\n\n    var base64Flag = \"data:image/jpeg;base64,\";\n\n    var imageStr = this.arrayBufferToBase64(img.data.data);\n    this.setState({\n      ...this.state,\n      img: base64Flag + imageStr,\n    });\n  };\n\n  send = (e) => {\n    const data = new FormData();\n    data.append(\"id\", this.props.project._id);\n    data.append(\"file\", this.state.file);\n\n    this.props.editProjectImage(data).then(() => {\n      this.setImgSource();\n    });\n  };\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  };\n\n  render() {\n    const { name, _id } = this.props.project;\n\n    return (\n      <div>\n        <h1 class=\"text-center\">{name}</h1>\n        <Button\n          className=\"remove-btn\"\n          color=\"danger\"\n          size=\"sm\"\n          onClick={() => this.onDeleteClick(_id)}\n        >\n          Delete this project\n        </Button>\n        <ProjectEditModal></ProjectEditModal>\n        <form action=\"#\">\n          <div>\n            <label htmlFor=\"file\">Image</label>\n            <input\n              type=\"file\"\n              id=\"file\"\n              accept=\".jpg\"\n              onChange={(event) => {\n                const file = event.target.files[0];\n                this.setState({ ...this.state, file: file });\n              }}\n            ></input>\n          </div>\n          <button onClick={this.send}>Submit</button>\n        </form>\n        <div class=\"row\">\n          <div class=\"col-sm-8\">\n            <img\n              src={this.state.img}\n              class=\"figure-img img-fluid mx-auto\"\n              alt=\"No image\"\n              style={{ maxHeight: \"200px\", maxWidth: \"200px\" }}\n            ></img>\n          </div>\n          <div class=\"col-sm-4\">\n            <ProjectContributorSidebar></ProjectContributorSidebar>\n          </div>\n        </div>\n\n        <ProjectNavbar></ProjectNavbar>\n      </div>\n    );\n  }\n}\n\nProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  deleteProject: PropTypes.func.isRequired,\n  editProjectImage: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n});\n\nexport default connect(mapStateToProps, {\n  getProject,\n  deleteProject,\n  editProjectImage,\n})(Project);\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectNavbar.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectDescription.js",["78"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getProject, getProjects } from \"../actions/projectActions\";\nimport { connect } from \"react-redux\";\n\nexport class ProjectDescription extends Component {\n  render() {\n    const description = this.props.project.project.description;\n\n    return <div>{description}</div>;\n  }\n}\n\nProjectDescription.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProject })(ProjectDescription);\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectEditModal.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectContributorSidebar.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":12},{"ruleId":"83","severity":1,"message":"87","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":8,"endColumn":10},{"ruleId":"83","severity":1,"message":"88","line":9,"column":3,"nodeType":"85","messageId":"86","endLine":9,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":44,"column":23,"nodeType":"91","endLine":49,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":96,"column":13,"nodeType":"91","endLine":101,"endColumn":14},{"ruleId":"83","severity":1,"message":"92","line":3,"column":22,"nodeType":"85","messageId":"86","endLine":3,"endColumn":33},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'getProjects' is defined but never used.","no-global-assign","no-unsafe-negation"]