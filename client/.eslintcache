[{"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/index.js":"1","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/App.js":"2","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reportWebVitals.js":"3","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/AppNavbar.js":"4","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectList.js":"5","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/store.js":"6","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/index.js":"7","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/projectReducer.js":"8","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/types.js":"9","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/projectActions.js":"10","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectModal.js":"11","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/Project.js":"12"},{"size":478,"mtime":1607741536159,"results":"13","hashOfConfig":"14"},{"size":1303,"mtime":1607776864776,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607739975084,"results":"16","hashOfConfig":"14"},{"size":936,"mtime":1607768476774,"results":"17","hashOfConfig":"14"},{"size":2049,"mtime":1607784339710,"results":"18","hashOfConfig":"14"},{"size":406,"mtime":1607769426518,"results":"19","hashOfConfig":"14"},{"size":153,"mtime":1607768491831,"results":"20","hashOfConfig":"14"},{"size":1037,"mtime":1607778971881,"results":"21","hashOfConfig":"14"},{"size":228,"mtime":1607778699995,"results":"22","hashOfConfig":"14"},{"size":1039,"mtime":1607779251889,"results":"23","hashOfConfig":"14"},{"size":1893,"mtime":1607771074941,"results":"24","hashOfConfig":"14"},{"size":1488,"mtime":1607784336518,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dk7szp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/index.js",[],["54","55"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/App.js",["56"],"import logo from \"./RavenLogo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ProjectList from \"./components/ProjectList\";\nimport Project from \"./components/Project\";\nimport ProjectModal from \"./components/ProjectModal\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <React.Fragment>\n                  <ProjectModal></ProjectModal>\n                  <ProjectList />\n                </React.Fragment>\n              )}\n            />\n            <Route\n              exact\n              path=\"/projects/:id\"\n              render={(props) => (\n                <React.Fragment>\n                  <Project id={props.match.params.id}></Project>\n                </React.Fragment>\n              )}\n            />\n          </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reportWebVitals.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/AppNavbar.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectList.js",["57","58","59","60","61"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/store.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/index.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/projectReducer.js",["62","63"],"import { bindActionCreators } from \"redux\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  GET_PROJECTS,\n  ADD_PROJECT,\n  DELETE_PROJECT,\n  PROJECTS_LOADING,\n  GET_PROJECT,\n} from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  loading: false,\n};\n\nconst reducer = function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n        loading: false,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project._id !== action.payload\n        ),\n      };\n    case ADD_PROJECT:\n      return {\n        ...state,\n        projects: [action.payload, ...state.projects],\n      };\n    case PROJECTS_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/types.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/projectActions.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectModal.js",["64"],"import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport { addProject } from \"../actions/projectActions\";\nimport { v4 as uuid } from \"uuid\";\n\nexport class ProjectModal extends Component {\n  state = {\n    modal: false,\n    name: \"\",\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const newProject = {\n      name: this.state.name,\n    };\n\n    //   add project via addProject method\n    this.props.addProject(newProject);\n\n    // close modal\n    this.toggle();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"dark\"\n          style={{ marginBottom: \"2rem\" }}\n          onClick={this.toggle}\n        >\n          Add Project\n        </Button>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add To Project List</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"project\">Project</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"project\"\n                  placeholder=\"Add project\"\n                  onChange={this.onChange}\n                ></Input>\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Add Project\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapsStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapsStateToProps, { addProject })(ProjectModal);\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/Project.js",["65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":2,"column":21,"nodeType":"73","messageId":"74","endLine":2,"endColumn":30},{"ruleId":"71","severity":1,"message":"76","line":2,"column":32,"nodeType":"73","messageId":"74","endLine":2,"endColumn":45},{"ruleId":"71","severity":1,"message":"77","line":2,"column":47,"nodeType":"73","messageId":"74","endLine":2,"endColumn":53},{"ruleId":"71","severity":1,"message":"78","line":3,"column":16,"nodeType":"73","messageId":"74","endLine":3,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":38,"column":23,"nodeType":"81","endLine":43,"endColumn":24},{"ruleId":"71","severity":1,"message":"82","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":28},{"ruleId":"71","severity":1,"message":"78","line":2,"column":16,"nodeType":"73","messageId":"74","endLine":2,"endColumn":20},{"ruleId":"71","severity":1,"message":"78","line":15,"column":16,"nodeType":"73","messageId":"74","endLine":15,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":23,"column":39,"nodeType":"85","messageId":"86","endLine":23,"endColumn":41},{"ruleId":"79","severity":1,"message":"80","line":27,"column":17,"nodeType":"81","endLine":32,"endColumn":18},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Button' is defined but never used.","'uuid' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'bindActionCreators' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]