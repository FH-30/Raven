[{"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/index.js":"1","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/App.js":"2","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reportWebVitals.js":"3","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/AppNavbar.js":"4","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectList.js":"5","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/store.js":"6","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/index.js":"7","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/projectReducer.js":"8","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/types.js":"9","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/projectActions.js":"10","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectModal.js":"11","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/Project.js":"12","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectNavbar.js":"13","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectDescription.js":"14","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectEditModal.js":"15","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectContributorSidebar.js":"16","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectChangeImageModal.js":"17","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/helpers/imageProcessing.js":"18"},{"size":478,"mtime":1607741536159,"results":"19","hashOfConfig":"20"},{"size":1303,"mtime":1607834926697,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1607739975084,"results":"22","hashOfConfig":"20"},{"size":794,"mtime":1607833494219,"results":"23","hashOfConfig":"20"},{"size":2056,"mtime":1607957343382,"results":"24","hashOfConfig":"20"},{"size":406,"mtime":1607769426518,"results":"25","hashOfConfig":"20"},{"size":153,"mtime":1607768491831,"results":"26","hashOfConfig":"20"},{"size":1443,"mtime":1607958733285,"results":"27","hashOfConfig":"20"},{"size":396,"mtime":1607958555063,"results":"28","hashOfConfig":"20"},{"size":1813,"mtime":1607960476321,"results":"29","hashOfConfig":"20"},{"size":2264,"mtime":1607834926712,"results":"30","hashOfConfig":"20"},{"size":2170,"mtime":1607960063360,"results":"31","hashOfConfig":"20"},{"size":1448,"mtime":1607834926714,"results":"32","hashOfConfig":"20"},{"size":625,"mtime":1607834926704,"results":"33","hashOfConfig":"20"},{"size":2428,"mtime":1607834926706,"results":"34","hashOfConfig":"20"},{"size":1180,"mtime":1607834926703,"results":"35","hashOfConfig":"20"},{"size":2110,"mtime":1607960247553,"results":"36","hashOfConfig":"20"},{"size":455,"mtime":1607960360932,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"dk7szp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/index.js",[],["79","80"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/App.js",["81"],"import logo from \"./RavenLogo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ProjectList from \"./components/ProjectList\";\nimport Project from \"./components/Project\";\nimport ProjectModal from \"./components/ProjectModal\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <React.Fragment>\n                  <ProjectModal></ProjectModal>\n                  <ProjectList />\n                </React.Fragment>\n              )}\n            />\n            <Route\n              exact\n              path=\"/projects/:id\"\n              render={(props) => (\n                <React.Fragment>\n                  <Project id={props.match.params.id}></Project>\n                </React.Fragment>\n              )}\n            />\n          </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reportWebVitals.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/AppNavbar.js",["82","83"],"import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n} from \"reactstrap\";\n\nexport class AppNavbar extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">Raven</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar></Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default AppNavbar;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectList.js",["84"],"import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport class ProjectList extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  setImgSource = (imgBlob) => {\n    if (!imgBlob) {\n      return \"\";\n    }\n\n    var base64Flag = \"data:image/jpeg;base64,\";\n\n    var imageStr = this.arrayBufferToBase64(imgBlob.data.data);\n    return base64Flag + imageStr;\n  };\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  };\n\n  render() {\n    const { projects } = this.props;\n\n    return (\n      <Container>\n        <h1 class=\"text-center\">Projects List</h1>\n        <ul className=\"project-list\">\n          {projects.map(({ _id, name, img }) => (\n            <Link to={{ pathname: \"/projects/\" + _id + \"?#\" }} key={_id}>\n              <li className=\"project-list-item\">\n                <figure class=\"figure\">\n                  <div class=\"row\">\n                    <div class=\"col-md-8 offset-md-2\">\n                      <img\n                        src={this.setImgSource(img)}\n                        class=\"figure-img img-fluid mx-auto\"\n                        alt=\"No image\"\n                        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n                      ></img>\n                    </div>\n                  </div>\n\n                  <h4 class=\"text-center\">{name}</h4>\n                </figure>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n}\n\nProjectList.propTypes = {\n  getProjects: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state.project.projects,\n});\n\nexport default connect(mapStateToProps, { getProjects })(ProjectList);\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/store.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/index.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/reducers/projectReducer.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/types.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/actions/projectActions.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectModal.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/Project.js",["85"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectNavbar.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectDescription.js",["86"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getProject, getProjects } from \"../actions/projectActions\";\nimport { connect } from \"react-redux\";\n\nexport class ProjectDescription extends Component {\n  render() {\n    const description = this.props.project.project.description;\n\n    return <div>{description}</div>;\n  }\n}\n\nProjectDescription.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProject })(ProjectDescription);\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectEditModal.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectContributorSidebar.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/components/ProjectChangeImageModal.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/raven/Raven/client/src/helpers/imageProcessing.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":8,"column":3,"nodeType":"93","messageId":"94","endLine":8,"endColumn":10},{"ruleId":"91","severity":1,"message":"96","line":9,"column":3,"nodeType":"93","messageId":"94","endLine":9,"endColumn":10},{"ruleId":"97","severity":1,"message":"98","line":44,"column":23,"nodeType":"99","endLine":49,"endColumn":24},{"ruleId":"97","severity":1,"message":"98","line":46,"column":13,"nodeType":"99","endLine":51,"endColumn":14},{"ruleId":"91","severity":1,"message":"100","line":3,"column":22,"nodeType":"93","messageId":"94","endLine":3,"endColumn":33},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'getProjects' is defined but never used.","no-global-assign","no-unsafe-negation"]