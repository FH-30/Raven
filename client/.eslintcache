[{"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\index.js":"1","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\reportWebVitals.js":"2","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\App.js":"3","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\store.js":"4","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectList.js":"5","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectModal.js":"6","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\AppNavbar.js":"7","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\SearchProjectList.js":"8","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\Project.js":"9","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectNavbar.js":"10","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectEditModal.js":"11","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectContributorSidebar.js":"12","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectChangeImageModal.js":"13","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\actions\\projectActions.js":"14","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\reducers\\index.js":"15","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectDescription.js":"16","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\actions\\types.js":"17","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\helpers\\imageProcessing.js":"18","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\reducers\\projectReducer.js":"19"},{"size":494,"mtime":1608096893368,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1608096893370,"results":"22","hashOfConfig":"21"},{"size":1756,"mtime":1608096893359,"results":"23","hashOfConfig":"21"},{"size":424,"mtime":1608096893371,"results":"24","hashOfConfig":"21"},{"size":2129,"mtime":1608096893365,"results":"25","hashOfConfig":"21"},{"size":2361,"mtime":1608096893366,"results":"26","hashOfConfig":"21"},{"size":1571,"mtime":1608096893362,"results":"27","hashOfConfig":"21"},{"size":2341,"mtime":1608104649102,"results":"28","hashOfConfig":"21"},{"size":2042,"mtime":1608096893363,"results":"29","hashOfConfig":"21"},{"size":1512,"mtime":1608096893366,"results":"30","hashOfConfig":"21"},{"size":2533,"mtime":1608096893365,"results":"31","hashOfConfig":"21"},{"size":1236,"mtime":1608096893364,"results":"32","hashOfConfig":"21"},{"size":2500,"mtime":1608096893363,"results":"33","hashOfConfig":"21"},{"size":2144,"mtime":1608104649101,"results":"34","hashOfConfig":"21"},{"size":159,"mtime":1608096893369,"results":"35","hashOfConfig":"21"},{"size":648,"mtime":1608096893364,"results":"36","hashOfConfig":"21"},{"size":455,"mtime":1608096893362,"results":"37","hashOfConfig":"21"},{"size":474,"mtime":1608096893368,"results":"38","hashOfConfig":"21"},{"size":1515,"mtime":1608104649103,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"dfl031",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\index.js",[],["84","85"],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\reportWebVitals.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\App.js",["86"],"import logo from \"./RavenLogo.svg\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AppNavbar from \"./components/AppNavbar\";\r\nimport SearchProjectList from \"./components/SearchProjectList\";\r\nimport ProjectList from \"./components/ProjectList\";\r\nimport Project from \"./components/Project\";\r\nimport ProjectModal from \"./components/ProjectModal\";\r\nimport { Container } from \"reactstrap\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <AppNavbar />\r\n          <Container>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <React.Fragment>\r\n                  <ProjectModal></ProjectModal>\r\n                  <ProjectList />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/projects/:id\"\r\n              render={(props) => (\r\n                <React.Fragment>\r\n                  <Project id={props.match.params.id}></Project>\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/search/:query\"\r\n              render={(props) => (\r\n                <React.Fragment>\r\n                  <ProjectModal></ProjectModal>\r\n                  <SearchProjectList query={props.match.params.query} />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n          </Container>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\store.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectList.js",["87"],"import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class ProjectList extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  setImgSource = (imgBlob) => {\r\n    if (!imgBlob) {\r\n      return \"\";\r\n    }\r\n\r\n    var base64Flag = \"data:image/jpeg;base64,\";\r\n\r\n    var imageStr = this.arrayBufferToBase64(imgBlob.data.data);\r\n    return base64Flag + imageStr;\r\n  };\r\n\r\n  arrayBufferToBase64 = (buffer) => {\r\n    var binary = \"\";\r\n    var bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n    return window.btoa(binary);\r\n  };\r\n\r\n  render() {\r\n    const { projects } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <h1 class=\"text-center\">Projects List</h1>\r\n        <ul className=\"project-list\">\r\n          {projects.map(({ _id, name, img }) => (\r\n            <Link to={{ pathname: \"/projects/\" + _id + \"?#\" }} key={_id}>\r\n              <li className=\"project-list-item\">\r\n                <figure class=\"figure\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-8 offset-md-2\">\r\n                      <img\r\n                        src={this.setImgSource(img)}\r\n                        class=\"figure-img img-fluid mx-auto\"\r\n                        alt=\"No image\"\r\n                        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n                      ></img>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <h4 class=\"text-center\">{name}</h4>\r\n                </figure>\r\n              </li>\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nProjectList.propTypes = {\r\n  getProjects: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.project.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(ProjectList);\r\n","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectModal.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\AppNavbar.js",["88"],"import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container,\r\n  Form,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nexport class AppNavbar extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    search: \"\",\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"SUbmit pressed\");\r\n\r\n    //Search Item using searchItem\r\n    window.location.href = `/search/${this.state.search}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n          <Container>\r\n            <NavbarBrand href=\"/\">Raven</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Form onSubmit={this.onSubmit}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"search\"\r\n                      id=\"project\"\r\n                      placeholder=\"Search project\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </Form>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\SearchProjectList.js",["89","90","91","92"],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\Project.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectNavbar.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectEditModal.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectContributorSidebar.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectChangeImageModal.js",["93","94"],"import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup } from \"reactstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getProject,\r\n  editProject,\r\n  editProjectImage,\r\n  updateProjectImageSrc,\r\n} from \"../actions/projectActions\";\r\n\r\nexport class ProjectChangeImageModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    file: null,\r\n    img: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getProject(this.props.id).then(() => {\r\n      this.props.updateProjectImageSrc(this.props.project._id);\r\n    });\r\n  }\r\n\r\n  send = (e) => {\r\n    const data = new FormData();\r\n    data.append(\"id\", this.props.project._id);\r\n    data.append(\"file\", this.state.file);\r\n\r\n    this.props.editProjectImage(data).then(() => {\r\n      this.props.updateProjectImageSrc(this.props.project._id);\r\n    });\r\n\r\n    // close modal\r\n    this.toggle();\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: \"2rem\" }} onClick={this.toggle}>\r\n          <img\r\n            src={this.props.imageSrc}\r\n            class=\"figure-img img-fluid mx-auto project-detail-image\"\r\n            alt=\"Click here to change image\"\r\n            style={{ maxHeight: \"200px\", maxWidth: \"200px\" }}\r\n          ></img>\r\n        </div>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>Change Project Poster</ModalHeader>\r\n          <ModalBody>\r\n            <form action=\"#\">\r\n              <FormGroup>\r\n                <input\r\n                  className=\"form-control-file\"\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  accept=\".jpg\"\r\n                  onChange={(event) => {\r\n                    const file = event.target.files[0];\r\n                    this.setState({ ...this.state, file: file });\r\n                  }}\r\n                ></input>\r\n              </FormGroup>\r\n              <button className=\"btn btn-primary\" onClick={this.send}>\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapsStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  imageSrc: state.project.imageSrc,\r\n});\r\n\r\nexport default connect(mapsStateToProps, {\r\n  getProject,\r\n  editProject,\r\n  editProjectImage,\r\n  updateProjectImageSrc,\r\n})(ProjectChangeImageModal);\r\n","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\actions\\projectActions.js",["95"],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\reducers\\index.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\components\\ProjectDescription.js",["96"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProject, getProjects } from \"../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class ProjectDescription extends Component {\r\n  render() {\r\n    const description = this.props.project.project.description;\r\n\r\n    return <div>{description}</div>;\r\n  }\r\n}\r\n\r\nProjectDescription.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject })(ProjectDescription);\r\n","C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\actions\\types.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\helpers\\imageProcessing.js",[],"C:\\Users\\gilbe\\Desktop\\Raven\\client\\src\\reducers\\projectReducer.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":44,"column":23,"nodeType":"107","endLine":49,"endColumn":24},{"ruleId":"101","severity":1,"message":"108","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":10},{"ruleId":"101","severity":1,"message":"109","line":2,"column":21,"nodeType":"103","messageId":"104","endLine":2,"endColumn":30},{"ruleId":"101","severity":1,"message":"110","line":2,"column":32,"nodeType":"103","messageId":"104","endLine":2,"endColumn":45},{"ruleId":"101","severity":1,"message":"111","line":2,"column":47,"nodeType":"103","messageId":"104","endLine":2,"endColumn":53},{"ruleId":"105","severity":1,"message":"106","line":48,"column":23,"nodeType":"107","endLine":53,"endColumn":24},{"ruleId":"101","severity":1,"message":"111","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":48,"column":11,"nodeType":"107","endLine":53,"endColumn":12},{"ruleId":"101","severity":1,"message":"112","line":9,"column":3,"nodeType":"103","messageId":"104","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"113","line":3,"column":22,"nodeType":"103","messageId":"104","endLine":3,"endColumn":33},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'NavLink' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Button' is defined but never used.","'SEARCH_PROJECTS' is defined but never used.","'getProjects' is defined but never used.","no-global-assign","no-unsafe-negation"]