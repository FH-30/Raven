[{"/Users/francishodianto/Desktop/Raven/server/client/src/index.js":"1","/Users/francishodianto/Desktop/Raven/server/client/src/reportWebVitals.js":"2","/Users/francishodianto/Desktop/Raven/server/client/src/App.js":"3","/Users/francishodianto/Desktop/Raven/server/client/src/store.js":"4","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectModal.js":"5","/Users/francishodianto/Desktop/Raven/server/client/src/components/SearchProjectList.js":"6","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectList.js":"7","/Users/francishodianto/Desktop/Raven/server/client/src/components/AppNavbar.js":"8","/Users/francishodianto/Desktop/Raven/server/client/src/components/Project.js":"9","/Users/francishodianto/Desktop/Raven/server/client/src/components/account/SignUpModal.js":"10","/Users/francishodianto/Desktop/Raven/server/client/src/components/account/SignIn.js":"11","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectNavbar.js":"12","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectContributorSidebar.js":"13","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectEditModal.js":"14","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectChangeImageModal.js":"15","/Users/francishodianto/Desktop/Raven/server/client/src/actions/projectActions.js":"16","/Users/francishodianto/Desktop/Raven/server/client/src/reducers/index.js":"17","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectDescription.js":"18","/Users/francishodianto/Desktop/Raven/server/client/src/actions/types.js":"19","/Users/francishodianto/Desktop/Raven/server/client/src/helpers/imageProcessing.js":"20","/Users/francishodianto/Desktop/Raven/server/client/src/reducers/userReducer.js":"21","/Users/francishodianto/Desktop/Raven/server/client/src/reducers/projectReducer.js":"22","/Users/francishodianto/Desktop/Raven/server/client/src/components/account/SignInForm.js":"23","/Users/francishodianto/Desktop/Raven/server/client/src/actions/userActions.js":"24"},{"size":595,"mtime":1608531783680,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1607942922654,"results":"27","hashOfConfig":"26"},{"size":2418,"mtime":1608531793266,"results":"28","hashOfConfig":"26"},{"size":406,"mtime":1607942922656,"results":"29","hashOfConfig":"26"},{"size":2264,"mtime":1608142353838,"results":"30","hashOfConfig":"26"},{"size":2262,"mtime":1608059204650,"results":"31","hashOfConfig":"26"},{"size":2056,"mtime":1608059204650,"results":"32","hashOfConfig":"26"},{"size":3041,"mtime":1608540647668,"results":"33","hashOfConfig":"26"},{"size":1966,"mtime":1608059204648,"results":"34","hashOfConfig":"26"},{"size":8435,"mtime":1608527189366,"results":"35","hashOfConfig":"26"},{"size":593,"mtime":1608527189365,"results":"36","hashOfConfig":"26"},{"size":1448,"mtime":1607942922649,"results":"37","hashOfConfig":"26"},{"size":1180,"mtime":1607942922646,"results":"38","hashOfConfig":"26"},{"size":2434,"mtime":1608059204649,"results":"39","hashOfConfig":"26"},{"size":2407,"mtime":1608059204648,"results":"40","hashOfConfig":"26"},{"size":2019,"mtime":1608527189357,"results":"41","hashOfConfig":"26"},{"size":214,"mtime":1608527189367,"results":"42","hashOfConfig":"26"},{"size":625,"mtime":1607942922647,"results":"43","hashOfConfig":"26"},{"size":528,"mtime":1608534195048,"results":"44","hashOfConfig":"26"},{"size":455,"mtime":1608059204651,"results":"45","hashOfConfig":"26"},{"size":432,"mtime":1608531221295,"results":"46","hashOfConfig":"26"},{"size":1443,"mtime":1608093635319,"results":"47","hashOfConfig":"26"},{"size":6386,"mtime":1608527189365,"results":"48","hashOfConfig":"26"},{"size":1318,"mtime":1608534281942,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18sv8wd",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/francishodianto/Desktop/Raven/server/client/src/index.js",[],["109","110"],"/Users/francishodianto/Desktop/Raven/server/client/src/reportWebVitals.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/App.js",["111"],"import logo from \"./RavenLogo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport SearchProjectList from \"./components/SearchProjectList\";\nimport ProjectList from \"./components/ProjectList\";\nimport Project from \"./components/Project\";\nimport ProjectModal from \"./components/ProjectModal\";\nimport SignIn from \"./components/account/SignIn\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { fetchUserData } from \"./actions/userActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchUserData()\n  }\n\n  render() {\n    return (\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <Container>\n              <Route\n                exact\n                path=\"/\"\n                render={(props) => (\n                  <React.Fragment>\n                    <ProjectModal></ProjectModal>\n                    <ProjectList />\n                  </React.Fragment>\n                )}\n              />\n              <Route\n                exact\n                path=\"/projects/:id\"\n                render={(props) => (\n                  <React.Fragment>\n                    <Project id={props.match.params.id}></Project>\n                  </React.Fragment>\n                )}\n              />\n              <Route\n                exact\n                path=\"/search/:query\"\n                render={(props) => (\n                  <React.Fragment>\n                    <ProjectModal></ProjectModal>\n                    <SearchProjectList query={props.match.params.query} />\n                  </React.Fragment>\n                )}\n              />\n              <Route\n                exact\n                path=\"/account\"\n                render={(props) => (\n                  <React.Fragment>\n                    <SignIn></SignIn>\n                  </React.Fragment>\n                )}\n              />\n            </Container>\n          </div>\n        </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, {\n  fetchUserData,\n})(App);\n","/Users/francishodianto/Desktop/Raven/server/client/src/store.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectModal.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/SearchProjectList.js",["112","113","114","115"],"import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getSearchProjects, deleteProject } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport class SearchProjectList extends Component {\n  componentDidMount() {\n    this.props.getSearchProjects(this.props.query);\n  }\n\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  setImgSource = (imgBlob) => {\n    if (!imgBlob) {\n      return \"\";\n    }\n\n    var base64Flag = \"data:image/jpeg;base64,\";\n\n    var imageStr = this.arrayBufferToBase64(imgBlob.data.data);\n    return base64Flag + imageStr;\n  };\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  };\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <Container>\n        <h1 class=\"text-center\">Search result : {this.props.query}</h1>\n        <ul className=\"project-list\">\n          {projects.map(({ _id, name, img }) => (\n            <Link to={{ pathname: \"/projects/\" + _id }} key={_id}>\n              <li className=\"project-list-item\">\n                <figure class=\"figure\">\n                  <div class=\"row\">\n                    <div class=\"col-md-8 offset-md-2\">\n                      <img\n                        src={this.setImgSource(img)}\n                        class=\"figure-img img-fluid mx-auto\"\n                        alt=\"No image\"\n                        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n                      ></img>\n                    </div>\n                  </div>\n\n                  <h4 class=\"text-center\">{name}</h4>\n                </figure>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n}\n\nSearchProjectList.propTypes = {\n  getSearchProjects: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getSearchProjects, deleteProject })(\n  SearchProjectList\n);\n","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectList.js",["116"],"import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport class ProjectList extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  setImgSource = (imgBlob) => {\n    if (!imgBlob) {\n      return \"\";\n    }\n\n    var base64Flag = \"data:image/jpeg;base64,\";\n\n    var imageStr = this.arrayBufferToBase64(imgBlob.data.data);\n    return base64Flag + imageStr;\n  };\n\n  arrayBufferToBase64 = (buffer) => {\n    var binary = \"\";\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => (binary += String.fromCharCode(b)));\n    return window.btoa(binary);\n  };\n\n  render() {\n    const { projects } = this.props;\n\n    return (\n      <Container>\n        <h1 class=\"text-center\">Projects List</h1>\n        <ul className=\"project-list\">\n          {projects.map(({ _id, name, img }) => (\n            <Link to={{ pathname: \"/projects/\" + _id + \"?#\" }} key={_id}>\n              <li className=\"project-list-item\">\n                <figure class=\"figure\">\n                  <div class=\"row\">\n                    <div class=\"col-md-8 offset-md-2\">\n                      <img\n                        src={this.setImgSource(img)}\n                        class=\"figure-img img-fluid mx-auto\"\n                        alt=\"No image\"\n                        style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\n                      ></img>\n                    </div>\n                  </div>\n\n                  <h4 class=\"text-center\">{name}</h4>\n                </figure>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n}\n\nProjectList.propTypes = {\n  getProjects: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  projects: state.project.projects,\n});\n\nexport default connect(mapStateToProps, { getProjects })(ProjectList);\n","/Users/francishodianto/Desktop/Raven/server/client/src/components/AppNavbar.js",["117","118"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { signOut } from \"../actions/userActions\";\nimport {\n  Collapse,\n  Label,\n  Button,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Form,\n  Input,\n} from \"reactstrap\";\n\nexport class AppNavbar extends Component {\n  state = {\n    isOpen: false,\n    search: \"\",\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    //Search Item using searchItem\n    window.location.href = `/search/${this.state.search}`;\n  };\n\n  displayUsername = () => {\n    const username = this.props.user.username;\n    if (username) {\n      return username;\n    }\n\n    return \"\";\n  };\n\n  displayLogin = () => {\n    const isLoggedIn = Object.entries(this.props.user).length > 0;\n    if (isLoggedIn) {\n      return (\n        <Button\n          color=\"danger\"\n          onClick={() => {\n            this.props.signOut();\n            window.location.href = \"/\";\n          }}\n          className=\"ml-4\"\n        >\n          Logout\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          color=\"success\"\n          onClick={() => (window.location.href = \"/account\")}\n          className=\"ml-4\"\n        >\n          Login\n        </Button>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <img src=\"/RavenLogo.svg\" height=\"50\" width=\"50\" className=\"mr-3\" />\n            <NavbarBrand href=\"/\">Raven</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Form onSubmit={this.onSubmit}>\n                    <Input\n                      type=\"text\"\n                      name=\"search\"\n                      id=\"project\"\n                      placeholder=\"Search project\"\n                      onChange={this.onChange}\n                    />\n                  </Form>\n                </NavItem>\n                <NavItem>{this.displayLogin()}</NavItem>\n                <NavItem>\n                  <Label\n                    style={{\n                      color: \"white\",\n                      wordWrap: \"break-word\",\n                      width: \"120px\",\n                    }}\n                    className=\"ml-3 mt-2\"\n                  >\n                    {this.displayUsername()}\n                  </Label>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nAppNavbar.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, { signOut })(AppNavbar);\n","/Users/francishodianto/Desktop/Raven/server/client/src/components/Project.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/account/SignUpModal.js",["119"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../actions/userActions\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Input,\n  Row,\n  InputGroup,\n  InputGroupAddon,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from \"reactstrap\";\n\nclass SignUpModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHiddenPassword: true,\n      modal: false,\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      errors: {},\n    };\n  }\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  resetState = () => {\n    this.setState({\n      isHiddenPassword: true,\n      modal: false,\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      errors: {},\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  setError = (errors) => {\n    this.setState({ errors });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const newUser = {\n      username: this.state.username,\n      password: this.state.password,\n      email: this.state.email,\n    };\n\n    this.props.signUp(newUser, this.resetState, this.setError);\n  };\n\n  usernameInputBox = () => {\n    const isError = this.state.errors.username;\n    if (isError) {\n      return (\n        <FormGroup>\n          <Input\n            invalid\n            type=\"text\"\n            value={this.state.username}\n            placeholder=\"Username\"\n            autoComplete=\"off\"\n            id=\"username-error\"\n            name=\"username\"\n            onChange={this.onChange}\n          />\n          <FormFeedback>{this.state.errors.username}</FormFeedback>\n        </FormGroup>\n      );\n    } else {\n      return (\n        <FormGroup>\n          <Input\n            type=\"text\"\n            value={this.state.username}\n            placeholder=\"Username\"\n            autoComplete=\"off\"\n            id=\"username\"\n            name=\"username\"\n            onChange={this.onChange}\n          ></Input>\n        </FormGroup>\n      );\n    }\n  };\n\n  emailInputBox = () => {\n    const isError = this.state.errors.email;\n    if (isError) {\n      return (\n        <FormGroup>\n          <Input\n            invalid\n            type=\"email\"\n            value={this.state.email}\n            placeholder=\"Email\"\n            autoComplete=\"off\"\n            id=\"email-error\"\n            name=\"email\"\n            onChange={this.onChange}\n          />\n          <FormFeedback>{this.state.errors.email}</FormFeedback>\n        </FormGroup>\n      );\n    } else {\n      return (\n        <FormGroup>\n          <Input\n            type=\"email\"\n            value={this.state.email}\n            placeholder=\"Email\"\n            autoComplete=\"off\"\n            id=\"email\"\n            name=\"email\"\n            onChange={this.onChange}\n          ></Input>\n        </FormGroup>\n      );\n    }\n  };\n\n  passwordType = () => {\n    if (this.state.isHiddenPassword) {\n      return \"password\";\n    }\n\n    return \"text\";\n  };\n\n  togglePasswordVisibility = (e) => {\n    e.preventDefault();\n\n    this.setState({ isHiddenPassword: !this.state.isHiddenPassword });\n  };\n\n  togglePasswordButton = () => {\n    if (this.state.isHiddenPassword) {\n      return (\n        <Button color=\"secondary\" onClick={this.togglePasswordVisibility}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-eye\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"\n            />\n          </svg>\n        </Button>\n      );\n    } else {\n      return (\n        <Button color=\"secondary\" onClick={this.togglePasswordVisibility}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-eye-slash\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z\" />\n            <path d=\"M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299l.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z\" />\n            <path d=\"M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709z\" />\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M13.646 14.354l-12-12 .708-.708 12 12-.708.708z\"\n            />\n          </svg>\n        </Button>\n      );\n    }\n  };\n\n  passwordInputBox = () => {\n    const isError = this.state.errors.password;\n    if (isError) {\n      return (\n        <FormGroup>\n          <InputGroup>\n            <Input\n              invalid\n              type={this.passwordType()}\n              value={this.state.password}\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              id=\"password-error\"\n              name=\"password\"\n              onChange={this.onChange}\n            ></Input>\n            <InputGroupAddon addonType=\"append\">\n              {this.togglePasswordButton()}\n            </InputGroupAddon>\n            <FormFeedback>{this.state.errors.password}</FormFeedback>\n          </InputGroup>\n        </FormGroup>\n      );\n    } else {\n      return (\n        <FormGroup>\n          <InputGroup>\n            <Input\n              type={this.passwordType()}\n              value={this.state.password}\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              id=\"password\"\n              name=\"password\"\n              onChange={this.onChange}\n            ></Input>\n            <InputGroupAddon addonType=\"append\">\n              {this.togglePasswordButton()}\n            </InputGroupAddon>\n          </InputGroup>\n        </FormGroup>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <Button color=\"success\" className=\"mt-2\" onClick={this.toggle}>\n            Create New Account\n          </Button>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n            className=\"modal-dialog modal-dialog-centered\"\n          >\n            <ModalHeader toggle={this.toggle}>\n              <p className=\"mb-0\">\n                <h2>Sign Up</h2>\n              </p>\n              <span>\n                <small>It's quick and easy.</small>\n              </span>\n            </ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.onSubmit} encType=\"multipart/form-data\">\n                <FormGroup>\n                  {this.usernameInputBox()}\n                  {this.emailInputBox()}\n                  {this.passwordInputBox()}\n                </FormGroup>\n                <p>\n                  <small>\n                    By clicking on Sign Up, you agree to our Terms, Data Policy\n                    and Cookie Policy. You may receive email notifications from\n                    us and can opt out any time.{\" \"}\n                  </small>\n                </p>\n                <div className=\"text-center\">\n                  <Button color=\"success\" className=\"btn btn-primary btn-block\">\n                    Sign Up\n                  </Button>\n                </div>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nSignUpModal.propTypes = {\n  signUp: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, {\n  signUp,\n})(SignUpModal);\n","/Users/francishodianto/Desktop/Raven/server/client/src/components/account/SignIn.js",["120"],"import React, { Component } from \"react\";\nimport SigninForm from \"./SignInForm\";\nimport SignUpModal from \"./SignUpModal\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      password: \"\",\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"bg-light rounded w-50 m-auto border pt-4 pb-4 text-center\"\n      >\n        <img src=\"./Ravenlogo.svg\" className=\"mb-3\" />\n        <div>\n          <SigninForm></SigninForm>\n          <SignUpModal></SignUpModal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectNavbar.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectContributorSidebar.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectEditModal.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectChangeImageModal.js",["121","122"],"import React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport {\n  getProject,\n  editProject,\n  editProjectImage,\n  updateProjectImageSrc,\n} from \"../actions/projectActions\";\n\nexport class ProjectChangeImageModal extends Component {\n  state = {\n    modal: false,\n    file: null,\n    img: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getProject(this.props.id).then(() => {\n      this.props.updateProjectImageSrc(this.props.project._id);\n    });\n  }\n\n  send = (e) => {\n    const data = new FormData();\n    data.append(\"id\", this.props.project._id);\n    data.append(\"file\", this.state.file);\n\n    this.props.editProjectImage(data).then(() => {\n      this.props.updateProjectImageSrc(this.props.project._id);\n    });\n\n    // close modal\n    this.toggle();\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ marginBottom: \"2rem\" }} onClick={this.toggle}>\n          <img\n            src={this.props.imageSrc}\n            class=\"figure-img img-fluid mx-auto project-detail-image\"\n            alt=\"Click here to change image\"\n            style={{ maxHeight: \"200px\", maxWidth: \"200px\" }}\n          ></img>\n        </div>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Change Project Poster</ModalHeader>\n          <ModalBody>\n            <form action=\"#\">\n              <FormGroup>\n                <input\n                  className=\"form-control-file\"\n                  type=\"file\"\n                  id=\"file\"\n                  accept=\".jpg\"\n                  onChange={(event) => {\n                    const file = event.target.files[0];\n                    this.setState({ ...this.state, file: file });\n                  }}\n                ></input>\n              </FormGroup>\n              <button className=\"btn btn-primary\" onClick={this.send}>\n                Submit\n              </button>\n            </form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapsStateToProps = (state) => ({\n  project: state.project.project,\n  imageSrc: state.project.imageSrc,\n});\n\nexport default connect(mapsStateToProps, {\n  getProject,\n  editProject,\n  editProjectImage,\n  updateProjectImageSrc,\n})(ProjectChangeImageModal);\n","/Users/francishodianto/Desktop/Raven/server/client/src/actions/projectActions.js",["123"],"import axios from \"axios\";\nimport {\n  GET_PROJECTS,\n  ADD_PROJECT,\n  DELETE_PROJECT,\n  PROJECTS_LOADING,\n  GET_PROJECT,\n  EDIT_PROJECT,\n  SEARCH_PROJECTS,\n  EDIT_PROJECT_IMAGE,\n  UPDATE_PROJECT_IMAGE_SRC,\n} from \"./types\";\nimport { getImgSource } from \"../helpers/imageProcessing\";\n\nexport const getProjects = () => (dispatch) => {\n  dispatch(setProjectsLoading());\n  axios.get(\"/api/projects\").then((res) =>\n    dispatch({\n      type: GET_PROJECTS,\n      payload: res.data,\n    })\n  );\n};\n\nexport const deleteProject = (id) => (dispatch) => {\n  axios\n    .delete(`/api/projects/${id}`)\n    .then((res) => dispatch({ type: DELETE_PROJECT, payload: id }));\n};\n\nexport const addProject = (project) => (dispatch) => {\n  axios.post(\"/api/projects\", project).then((res) =>\n    dispatch({\n      type: ADD_PROJECT,\n      payload: res.data,\n    })\n  );\n};\n\nexport const setProjectsLoading = () => {\n  return {\n    type: PROJECTS_LOADING,\n  };\n};\n\nexport const getProject = (id) => async (dispatch) => {\n  dispatch(setProjectsLoading());\n  await axios.get(`/api/projects/${id}`).then((res) => {\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  });\n};\n\nexport const editProject = (id, project) => (dispatch) => {\n  axios.put(`/api/projects/${id}`, project).then((res) => {\n    dispatch({\n      type: EDIT_PROJECT,\n      payload: res.data,\n    });\n  });\n};\n\nexport const getSearchProjects = (query) => (dispatch) => {\n  axios.get(`/search/${query}`).then((res) =>\n    dispatch({\n      type: GET_PROJECTS,\n      payload: res.data,\n    })\n  );\n};\nexport const editProjectImage = (project) => async (dispatch) => {\n  await axios.post(`/api/projects/upload`, project).then((res) => {\n    dispatch({\n      type: EDIT_PROJECT_IMAGE,\n      payload: res.data,\n    });\n  });\n};\n\nexport const updateProjectImageSrc = (id) => async (dispatch) => {\n  await axios.get(`/api/projects/${id}`).then((res) => {\n    dispatch({\n      type: UPDATE_PROJECT_IMAGE_SRC,\n      imageSrc: getImgSource(res.data),\n    });\n  });\n};\n","/Users/francishodianto/Desktop/Raven/server/client/src/reducers/index.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/ProjectDescription.js",["124"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getProject, getProjects } from \"../actions/projectActions\";\nimport { connect } from \"react-redux\";\n\nexport class ProjectDescription extends Component {\n  render() {\n    const description = this.props.project.project.description;\n\n    return <div>{description}</div>;\n  }\n}\n\nProjectDescription.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProject })(ProjectDescription);\n","/Users/francishodianto/Desktop/Raven/server/client/src/actions/types.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/helpers/imageProcessing.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/reducers/userReducer.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/reducers/projectReducer.js",[],"/Users/francishodianto/Desktop/Raven/server/client/src/components/account/SignInForm.js",["125"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../actions/userActions\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Input,\n  Row,\n  InputGroup,\n  InputGroupAddon,\n} from \"reactstrap\";\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      password: \"\",\n      isHiddenPassword: true,\n      errors: {},\n    };\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  resetState = () => {\n    this.setState({\n      uid: \"\",\n      password: \"\",\n      isHiddenPassword: true,\n      errors: {},\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const userCredentials = {\n      uid: this.state.uid,\n      password: this.state.password,\n    };\n\n    this.props.signIn(userCredentials, this.resetState, this.setError);\n  };\n\n  setError = (errors) => {\n    this.setState({ errors });\n  };\n\n  uidInputBox = () => {\n    const isError = this.state.errors.uid;\n    if (isError) {\n      return (\n        <FormGroup>\n          <Input\n            invalid\n            type=\"text\"\n            value={this.state.uid}\n            placeholder=\"Email address or username\"\n            autoComplete=\"off\"\n            id=\"uid-error\"\n            name=\"uid\"\n            onChange={this.onChange}\n          />\n          <FormFeedback>{this.state.errors.uid}</FormFeedback>\n        </FormGroup>\n      );\n    } else {\n      return (\n        <FormGroup>\n          <Input\n            type=\"text\"\n            value={this.state.uid}\n            placeholder=\"Email address or username\"\n            autoComplete=\"off\"\n            id=\"uid\"\n            name=\"uid\"\n            onChange={this.onChange}\n          ></Input>\n        </FormGroup>\n      );\n    }\n  };\n\n  passwordType = () => {\n    if (this.state.isHiddenPassword) {\n      return \"password\";\n    }\n\n    return \"text\";\n  };\n\n  togglePasswordVisibility = (e) => {\n    e.preventDefault();\n\n    this.setState({ isHiddenPassword: !this.state.isHiddenPassword });\n  };\n\n  togglePasswordButton = () => {\n    if (this.state.isHiddenPassword) {\n      return (\n        <Button color=\"secondary\" onClick={this.togglePasswordVisibility}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-eye\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.134 13.134 0 0 0 1.66 2.043C4.12 11.332 5.88 12.5 8 12.5c2.12 0 3.879-1.168 5.168-2.457A13.134 13.134 0 0 0 14.828 8a13.133 13.133 0 0 0-1.66-2.043C11.879 4.668 10.119 3.5 8 3.5c-2.12 0-3.879 1.168-5.168 2.457A13.133 13.133 0 0 0 1.172 8z\"\n            />\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"\n            />\n          </svg>\n        </Button>\n      );\n    } else {\n      return (\n        <Button color=\"secondary\" onClick={this.togglePasswordVisibility}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-eye-slash\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M13.359 11.238C15.06 9.72 16 8 16 8s-3-5.5-8-5.5a7.028 7.028 0 0 0-2.79.588l.77.771A5.944 5.944 0 0 1 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.134 13.134 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755-.165.165-.337.328-.517.486l.708.709z\" />\n            <path d=\"M11.297 9.176a3.5 3.5 0 0 0-4.474-4.474l.823.823a2.5 2.5 0 0 1 2.829 2.829l.822.822zm-2.943 1.299l.822.822a3.5 3.5 0 0 1-4.474-4.474l.823.823a2.5 2.5 0 0 0 2.829 2.829z\" />\n            <path d=\"M3.35 5.47c-.18.16-.353.322-.518.487A13.134 13.134 0 0 0 1.172 8l.195.288c.335.48.83 1.12 1.465 1.755C4.121 11.332 5.881 12.5 8 12.5c.716 0 1.39-.133 2.02-.36l.77.772A7.029 7.029 0 0 1 8 13.5C3 13.5 0 8 0 8s.939-1.721 2.641-3.238l.708.709z\" />\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M13.646 14.354l-12-12 .708-.708 12 12-.708.708z\"\n            />\n          </svg>\n        </Button>\n      );\n    }\n  };\n\n  setError = (errors) => {\n    this.setState({ errors });\n  };\n\n  passwordInputBox = () => {\n    const isError = this.state.errors.password;\n    if (isError) {\n      return (\n        <FormGroup>\n          <InputGroup>\n            <Input\n              invalid\n              type={this.passwordType()}\n              value={this.state.password}\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              id=\"password-error\"\n              name=\"password\"\n              onChange={this.onChange}\n            ></Input>\n            <InputGroupAddon addonType=\"append\">\n              {this.togglePasswordButton()}\n            </InputGroupAddon>\n            <FormFeedback>{this.state.errors.password}</FormFeedback>\n          </InputGroup>\n        </FormGroup>\n      );\n    } else {\n      return (\n        <FormGroup>\n          <InputGroup>\n            <Input\n              type={this.passwordType()}\n              value={this.state.password}\n              placeholder=\"Password\"\n              autoComplete=\"off\"\n              id=\"password\"\n              name=\"password\"\n              onChange={this.onChange}\n            ></Input>\n            <InputGroupAddon addonType=\"append\">\n              {this.togglePasswordButton()}\n            </InputGroupAddon>\n          </InputGroup>\n        </FormGroup>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Form onSubmit={this.onSubmit} style={{ display: \"inline-block\" }}>\n          {this.uidInputBox()}\n          {this.passwordInputBox()}\n          <Button color=\"primary\" className=\"mb-2\">\n            Log In\n          </Button>\n        </Form>\n        <Row>\n          <a href=\"\" className=\"text-center m-auto\">\n            Forgotten Password?\n          </a>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nSignInForm.propTypes = {\n  signIn: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n});\n\nexport default connect(mapStateToProps, {\n  signIn,\n})(SignInForm);\n","/Users/francishodianto/Desktop/Raven/server/client/src/actions/userActions.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":12},{"ruleId":"130","severity":1,"message":"134","line":2,"column":21,"nodeType":"132","messageId":"133","endLine":2,"endColumn":30},{"ruleId":"130","severity":1,"message":"135","line":2,"column":32,"nodeType":"132","messageId":"133","endLine":2,"endColumn":45},{"ruleId":"130","severity":1,"message":"136","line":2,"column":47,"nodeType":"132","messageId":"133","endLine":2,"endColumn":53},{"ruleId":"137","severity":1,"message":"138","line":48,"column":23,"nodeType":"139","endLine":53,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":44,"column":23,"nodeType":"139","endLine":49,"endColumn":24},{"ruleId":"130","severity":1,"message":"140","line":14,"column":3,"nodeType":"132","messageId":"133","endLine":14,"endColumn":10},{"ruleId":"141","severity":1,"message":"142","line":87,"column":13,"nodeType":"139","endLine":87,"endColumn":81},{"ruleId":"130","severity":1,"message":"143","line":11,"column":3,"nodeType":"132","messageId":"133","endLine":11,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":18,"column":9,"nodeType":"139","endLine":18,"endColumn":55},{"ruleId":"130","severity":1,"message":"136","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":48,"column":11,"nodeType":"139","endLine":53,"endColumn":12},{"ruleId":"130","severity":1,"message":"144","line":9,"column":3,"nodeType":"132","messageId":"133","endLine":9,"endColumn":18},{"ruleId":"130","severity":1,"message":"145","line":3,"column":22,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":211,"column":11,"nodeType":"139","endLine":211,"endColumn":53},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Row' is defined but never used.","'SEARCH_PROJECTS' is defined but never used.","'getProjects' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]